#!/bin/sh

# Copyright (c) 2015 Trevor Pounds <trevor.pounds@gmail.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

help() {
   echo "Usage: docker-registry COMMAND [arg...]"
   echo ""
   echo "Tool to lookup images in docker registry."
   echo ""
   echo "Commands:"
   echo ""
   echo "    delete        delete an image tag"
   echo "    help          show help and usage"
   echo "    images        list all repo images"
   echo "    tags          list image tags"
   echo ""
   echo "Run 'docker-registry help COMMAND' for more information on a command."
}

delete() {
   REPO=$(echo $1 | cut -d/ -f1)
   NAME=$(echo $1 | cut -d/ -f2- | cut -d: -f1)
   TAG=$(echo $1  | cut -d: -f2)
   if [ -z "$TAG" ]; then
      read -r -p "Delete tagged image $1? [y/N] " yes_no
      case $yes_no in
          [yY])
             curl -s -X DELETE https://$REPO/v1/repositories/$NAME/tags/$TAG
          ;;
      esac
   else
      read -r -p "Delete all tagged images $1? [y/N] " yes_no
      case $yes_no in
          [yY])
             curl -s -X DELETE https://$REPO/v1/repositories/$NAME/
          ;;
      esac
   fi
}

images() {
   REPO=$(echo $1 | cut -d/ -f1)
   QUERY=$2
   curl -s "https://$REPO/v1/search?q=$QUERY" | jq --raw-output '.results[].name' | sort
}

tags() {
   REPO=$(echo $1 | cut -d/ -f1)
   NAME=$(echo $1 | cut -d/ -f2-)
   if [ -n "$NAME" -a "$REPO" != "$NAME" ]; then
      curl -s https://$REPO/v1/repositories/$NAME/tags | jq --raw-output 'to_entries | map([.key, .value[0:12]] | join(" ")) | .[]' | sort -V | column -t
   else
      for i in $(images $REPO); do
         echo $i
         tags $REPO/$i
         echo
      done
   fi
}

case "$1" in
   delete)
      delete $2
      ;;
   images)
      images $2 $3
      ;;
   tags)
      tags $2
      ;;
   help|*)
      help
      exit 1
      ;;
esac
