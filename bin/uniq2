#!/bin/sh

# Copyright (c) 2015 Trevor Pounds <trevor.pounds@gmail.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

while getopts "chi" opt; do
    case "$opt" in
        c) opt_print_count=1 ;;
        i) opt_ignore_case=1 ;;
        h)
            echo "Usage: uniq2 [OPTION]..."
            echo ""
            echo "A fast, low overhead alternative to 'uniq' that does not require"
            echo "pre-sorting the input beforehand. The input lines are deduped and"
            echo "buffered in memory from stdin. The results are emitted unordered"
            echo "to stdout unless ."
            echo ""
            echo "OPTIONS"
            echo ""
            echo "   -c   prefix lines by the number of occurrences"
            echo "   -h   display this help and exit"
            echo "   -i   ignore differences in case when comparing"
            echo ""
            echo "EXAMPLES"
            echo ""
            echo "   cat dupes.in | uniq2 > deduped.out"
            echo ""
            echo "   cat dupes.in | uniq2 -c > count-dupes.out"
            echo ""
            echo "   cat dupes.in | uniq2 | sort > deduped-ordered.out"
            exit 1
            ;;
        \?)
            uniq2 -h
            exit 1
            ;;
    esac
done

fn_to_lower=""
if [ $opt_ignore_case ]; then
   fn_to_lower="tolower"
else
   fn_to_lower=""
fi

if [ $opt_print_count ]; then
   fn_print="printf(\"%7s %s\n\", k[i], i);"
else
   fn_print="print i"
fi

awk "{
        k[$fn_to_lower(\$0)]++
     }
     END {
        for(i in k) {
           $fn_print
        }
     }"
