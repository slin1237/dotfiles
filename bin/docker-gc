#!/bin/bash

# Copyright (c) 2015 Trevor Pounds <trevor.pounds@gmail.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# TODO: support max age (e.g. hour, day, week, etc.)

help() {
   echo "Usage: docker-gc COMMAND [arg...]"
   echo ""
   echo "Tool to clean up unused docker artifacts since native support"
   echo "currently does not exist."
   echo ""
   echo "see:"
   echo ""
   echo "   https://github.com/docker/docker/issues/928"
   echo "   https://github.com/docker/docker/issues/1247"
   echo "   https://github.com/docker/docker/pull/8484"
   echo ""
   echo "Commands:"
   echo ""
   echo "    all           clean up all artifacts"
   echo "    containers    clean up containers"
   echo "    images        clean up images"
   echo "    nuke          blow away all artifacts"
   echo "    volumes       clean up volumes"
   echo ""
   echo "Run 'docker-gc help COMMAND' for more information on a command."
}

containers() {
   old_containers=$(docker ps -a | grep Exited | grep -v "\(second\|minute\|hour\)s\? ago" | awk '{ print $1 }')
   if [ -n "$old_containers" ]; then
      docker rm -v $old_containers
   fi
}

images() {
   unused_images=$(docker images -q -f dangling=true)
   if [ -n "$unused_images" ]; then
      docker rmi $unused_images
   fi
}

nuke() {
   # TODO: destroy the world
   echo -n
}

volumes() {
   all_volumes=$(sudo ls -1 /var/lib/docker/volumes | sort)
   all_containers=$(docker ps -a -a --no-trunc=true | sort)
   orphaned_volumes=$(comm -23 <(echo "$all_volumes") <(echo "$all_containers"))
   for v in $orphaned_volumes; do
      echo "$v"
      sudo rm -rf /var/lib/docker/volumes/$v
      sudo rm -rf /var/lib/docker/vfs/dir/$v
   done
}

case "$1" in 
   all)
      containers
      images
      volumes
      ;;
   containers)
      containers
      ;;
   images)
      images
      ;;
   nuke)
      nuke
      ;;
   volumes)
      volumes
      ;;
   help|*)
      help
      exit 1
      ;;
esac
