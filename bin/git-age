#!/bin/sh

# Copyright (c) 2015 Trevor Pounds <trevor.pounds@gmail.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

#
# git-age: script to get age of local branches relative to origin/master
#
# foo@a37dea78  1 commits (today)
# bar@123bc5b3 35 commits (18 weeks ago)
#

# TODO: add support for multiple branch names and repository/refspec pairs.
#       e.g. git age [<branchname>...] [<repository> <refspec>]...
# TODO: sort options (e.g. date, commits)
# TODO: -/+ commits
# TODO: Calculate age based on remote tracking branch
#       defaulting to origin/master if one is not present.

if [ -n "$1" ]; then
   branches=$1
else
   branches=$(git for-each-ref --format='%(refname)' refs/heads | sed 's/refs\/heads\///')
fi

# refresh origin/master
git fetch origin master > /dev/null 2>&1

for branch in $branches
do
   commits=$(git log --oneline --pretty='%h' origin/master..$branch | wc -l)
   date=$(git log -1 --date=relative --pretty='%cd' $branch)
   epoch=$(git log -1 --format='%at' $branch)
   hash=$(git show --stat --date=relative --pretty='%h'  $branch | head -1)
   echo "$epoch#$branch@$hash#$commits#commits#($date)"
done | column -s'#' -t | sort -r -n | cut -d' ' -f3-
